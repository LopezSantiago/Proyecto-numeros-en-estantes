CCS PCM C Compiler, Version 4.140, 15424               25-ene.-17 19:30

               Filename:   C:\Users\USER\Desktop\Proyecto numeros en estantes\sin timer.lst

               ROM used:   768 words (9%)
                           Largest free fragment is 2048
               RAM used:   31 (6%) at main() level
                           66 (13%) worst case
               Stack:     3 worst case (1 in main + 2 for interrupts)

*
0000:  MOVLP  00
0001:  GOTO   2CC
0002:  NOP
*
0004:  CLRF   03
0005:  CLRF   0A
0006:  MOVLB  00
0007:  MOVF   77,W
0008:  MOVWF  20
0009:  MOVF   78,W
000A:  MOVWF  21
000B:  MOVF   79,W
000C:  MOVWF  22
000D:  MOVF   7A,W
000E:  MOVWF  23
000F:  CLRF   05
0010:  MOVLW  91
0011:  MOVWF  04
0012:  BTFSS  00.5
0013:  GOTO   016
0014:  BTFSC  11.5
0015:  GOTO   01F
0016:  MOVF   20,W
0017:  MOVWF  77
0018:  MOVF   21,W
0019:  MOVWF  78
001A:  MOVF   22,W
001B:  MOVWF  79
001C:  MOVF   23,W
001D:  MOVWF  7A
001E:  RETFIE
001F:  MOVLP  00
0020:  GOTO   03E
.................... //********************************************/ 
.................... //     DECLARACION DE Uc y Puertos           // 
.................... //********************************************/ 
....................  
....................  #include <16f1937.h>  //microcontrolador ej: #include <xxxx.h> 
.................... //////// Standard Header file for the PIC16F1937 device //////////////// 
.................... #device PIC16F1937 
.................... #list 
....................  
....................  #fuses   INTRC_IO  //fusible del cristal #fuses   INTRC_IO   
....................  #FUSES   NOWDT,PUT,NOPROTECT, NOLVP, NOBROWNOUT ,NOMCLR  //fuses ejm: NOWDT,PUT,NOPROTECT, NOLVP, NOBROWNOUT ,NOMCLR 
....................  #use     delay (CLOCK=8M)  //seleccion de la frecuencia del cristal ejm: #use     delay (CLOCK=8M) 
....................  #use     rs232(baud=9600, xmit=PIN_C6,rcv=PIN_C7)  //seleccion pines comunicacion serial #use     rs232(baud=9600, xmit=PIN_C6)  
....................  
....................  
.................... //*** DECLARACION DE BANCOS DE PINES ***// 
....................  
.................... //********************************************/ 
.................... //      #includes >> Librerias "APIS"        // 
.................... //********************************************/ 
....................  
....................  
....................  
.................... //********************************************/ 
.................... // #includes  >> Cabeceras '.c y .h' propias // 
.................... //********************************************/ 
....................  
....................  
....................  
....................  
.................... //********************************************/ 
.................... //                #DEFINES                   // 
.................... //******************************************* 
....................  
.................... //********************************************/ 
.................... //     DECLARACION VARIABLES GLOBALES        // 
.................... //********************************************/ 
.................... float numeroSeleccionado; 
.................... char dato; 
.................... int gate; 
.................... int datos_x_serial[3]; 
.................... int i =0,unidad,decena; 
.................... int1 numeros[10][8]={{1,0,1,1,0,0,0,0}, 
....................                      {0,0,1,1,0,0,0,0}, 
....................                      {1,0,1,0,0,0,1,0}, 
....................                      {0,0,1,0,0,0,0,0}, 
....................                      {0,0,0,1,0,0,0,0}, 
....................                      {0,0,0,0,1,0,0,0}, 
....................                      {0,0,0,0,0,1,0,0}, 
....................                      {0,0,0,0,0,0,1,0}, 
....................                      {1,1,1,1,1,1,1,0}, 
....................                      {0,0,0,0,0,0,0,0}}; 
*
02EA:  MOVLW  0D
02EB:  MOVLB  00
02EC:  MOVWF  30
02ED:  MOVLW  0C
02EE:  MOVWF  31
02EF:  MOVLW  45
02F0:  MOVWF  32
02F1:  MOVLW  04
02F2:  MOVWF  33
02F3:  MOVLW  08
02F4:  MOVWF  34
02F5:  MOVLW  10
02F6:  MOVWF  35
02F7:  MOVLW  20
02F8:  MOVWF  36
02F9:  MOVLW  40
02FA:  MOVWF  37
02FB:  MOVLW  7F
02FC:  MOVWF  38
02FD:  CLRF   39
....................  
.................... //********************************************/ 
.................... //            PROTOPOS A FUNCIONES           // 
.................... //********************************************/ 
.................... void Mcu_init(); 
.................... void LlenarVector(); 
....................  
....................  
.................... #INT_rda 
.................... void serial_isr()  
.................... {  
....................     dato=getchar(); 
*
003E:  BTFSS  11.5
003F:  GOTO   03E
0040:  MOVLB  03
0041:  MOVF   19,W
0042:  MOVLB  00
0043:  MOVWF  28
....................     if(dato!='$') 
0044:  MOVF   28,W
0045:  SUBLW  24
0046:  BTFSC  03.2
0047:  GOTO   053
....................         { 
....................          datos_x_serial[i]=dato; 
0048:  MOVLW  0A
0049:  ADDWF  2D,W
004A:  MOVWF  04
004B:  MOVLW  20
004C:  MOVWF  05
004D:  BTFSC  03.0
004E:  INCF   05,F
004F:  MOVF   28,W
0050:  MOVWF  00
....................          i++; 
0051:  INCF   2D,F
....................         }            
....................     else 
0052:  GOTO   246
....................      { 
....................       i=0;       
0053:  CLRF   2D
....................       unidad= datos_x_serial[0] - 48; 
0054:  MOVLW  30
0055:  SUBWF  2A,W
0056:  MOVWF  2E
....................       decena= datos_x_serial[1] - 48; 
0057:  MOVLW  30
0058:  SUBWF  2B,W
0059:  MOVWF  2F
....................        
....................       numeroSeleccionado= (float)(unidad*10.0)+decena; 
005A:  CLRF   43
005B:  MOVF   2E,W
005C:  MOVWF  42
005D:  CALL   021
005E:  MOVF   7A,W
005F:  MOVWF  41
0060:  MOVF   79,W
0061:  MOVWF  40
0062:  MOVF   78,W
0063:  MOVWF  3F
0064:  MOVF   77,W
0065:  MOVWF  3E
0066:  CLRF   45
0067:  CLRF   44
0068:  MOVLW  20
0069:  MOVWF  43
006A:  MOVLW  82
006B:  MOVWF  42
*
00E0:  MOVF   77,W
00E1:  MOVWF  3E
00E2:  MOVF   78,W
00E3:  MOVWF  3F
00E4:  MOVF   79,W
00E5:  MOVWF  40
00E6:  MOVF   7A,W
00E7:  MOVWF  41
00E8:  CLRF   43
00E9:  MOVF   2F,W
00EA:  MOVWF  42
00EB:  CALL   021
00EC:  BCF    03.1
00ED:  MOVF   41,W
00EE:  MOVWF  45
00EF:  MOVF   40,W
00F0:  MOVWF  44
00F1:  MOVF   3F,W
00F2:  MOVWF  43
00F3:  MOVF   3E,W
00F4:  MOVWF  42
00F5:  MOVF   7A,W
00F6:  MOVWF  49
00F7:  MOVF   79,W
00F8:  MOVWF  48
00F9:  MOVF   78,W
00FA:  MOVWF  47
00FB:  MOVF   77,W
00FC:  MOVWF  46
*
023E:  MOVF   7A,W
023F:  MOVWF  27
0240:  MOVF   79,W
0241:  MOVWF  26
0242:  MOVF   78,W
0243:  MOVWF  25
0244:  MOVF   77,W
0245:  MOVWF  24
....................  
....................      } 
.................... } 
....................  
....................  
....................  
....................  
0246:  BCF    11.5
0247:  MOVLP  00
0248:  GOTO   016
.................... void llenarVector(void){ 
....................    for(int i=1;i<5;i++){   
*
025E:  MOVLW  01
025F:  MOVLB  00
0260:  MOVWF  3A
0261:  MOVF   3A,W
0262:  SUBLW  04
0263:  BTFSS  03.0
0264:  GOTO   26E
....................       for (int i=0;i<8;i++){ 
0265:  CLRF   3B
0266:  MOVF   3B,W
0267:  SUBLW  07
0268:  BTFSS  03.0
0269:  GOTO   26C
....................           
....................       } 
026A:  INCF   3B,F
026B:  GOTO   266
....................    } 
026C:  INCF   3A,F
026D:  GOTO   261
.................... } 
....................  
.................... void escribirDatos(void){  
....................    disable_interrupts(int_rda); 
....................    int cont=0;        
....................    while (cont<40){ 
....................       if(gate==0) 
....................       {  output_low(pin_a1); 
....................          gate=1; 
....................          cont++; 
....................       } 
....................       else 
....................       { 
....................           
....................          //(tabla[cont]==0)?(output_low(pin_a2)):(output_high(pin_a2)); 
....................          output_high(pin_a1); 
....................          gate=0; 
....................          cont++; 
....................       }       
....................    }   
....................       output_high(pin_a4); 
....................       delay_us(100); 
....................       output_low(pin_a2); 
....................       output_low(pin_a5); 
....................       output_low(pin_a4); 
....................             
....................       enable_interrupts(int_rda); 
.................... } 
....................  
.................... //********************************************/ 
.................... //                   MAIN                    // 
.................... //********************************************/ 
.................... void main()     
....................   { 
*
02CC:  CLRF   05
02CD:  CLRF   04
02CE:  MOVLW  72
02CF:  MOVLB  01
02D0:  MOVWF  19
02D1:  MOVLW  0C
02D2:  MOVLB  03
02D3:  MOVWF  1B
02D4:  MOVLW  A2
02D5:  MOVWF  1E
02D6:  MOVLW  90
02D7:  MOVWF  1D
02D8:  MOVLB  00
02D9:  CLRF   2D
02DA:  MOVLB  0F
02DB:  CLRF   11
02DC:  CLRF   12
02DD:  CLRF   18
02DE:  CLRF   19
02DF:  CLRF   1A
02E0:  MOVLB  03
02E1:  CLRF   0C
02E2:  CLRF   0D
02E3:  CLRF   0F
02E4:  CLRF   10
02E5:  MOVLB  02
02E6:  CLRF   12
02E7:  CLRF   11
02E8:  CLRF   14
02E9:  CLRF   13
....................    Mcu_init();       //inicializacion de los pines y perifericos del Uc 
*
02FE:  GOTO   25A
....................    while(1) 
....................    {  
....................     
....................    } 
02FF:  GOTO   2FF
....................    } 
....................     //*********************************************/ 
.................... //FUNCION Inicializa Pines Perifericos e Intpc// 
.................... //*********************************************/ 
.................... void Mcu_init() 
.................... { 
0300:  SLEEP
....................  
....................    //PORTA_TRIS = 0b00000001; 
....................    
....................    // lo siguiente se requiere para conigurar el pin d6 como entrada analogica. 
....................    enable_interrupts(GLOBAL);    
*
025A:  MOVLW  C0
025B:  IORWF  0B,F
....................    enable_interrupts(int_rda); 
025C:  MOVLB  01
025D:  BSF    11.5
....................    LlenarVector();    
....................    output_low(pin_a0); 
*
026E:  MOVLB  01
026F:  BCF    0C.0
0270:  MOVLB  02
0271:  BCF    0C.0
....................    output_low(pin_a1); 
0272:  MOVLB  01
0273:  BCF    0C.1
0274:  MOVLB  02
0275:  BCF    0C.1
....................    output_low(pin_a2); 
0276:  MOVLB  01
0277:  BCF    0C.2
0278:  MOVLB  02
0279:  BCF    0C.2
....................    printf("ok ok ok ok ok ok ok ok ok ok ok"); 
027A:  MOVLW  49
027B:  MOVLB  03
027C:  MOVWF  11
027D:  MOVLW  02
027E:  MOVWF  12
.................... } 
*
02CA:  MOVLP  00
02CB:  GOTO   2FF (RETURN)
....................  
....................  
.................... //*********************************************/ 
.................... //FUNCION Inicializa Las Variables Globales   // 
.................... //*********************************************/ 
....................  
....................  
....................  

Configuration Fuses:
   Word  1: 3984   INTRC_IO NOWDT PUT NOMCLR NOPROTECT NOCPD NOBROWNOUT NOCLKOUT IESO FCMEN
   Word  2: 1EFF   NOWRT NOVCAP PLL_SW STVREN BORV19 NODEBUG NOLVP
